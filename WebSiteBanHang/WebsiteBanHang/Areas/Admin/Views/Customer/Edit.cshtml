@model WebsiteBanHang.Models.Entities.Customer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div id="page-wrapper">

    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Sửa thông tin khách hàng</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Customer</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.makhachhang)

            <div class="form-group">
                @Html.Label("Tên khách hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                @*@Html.LabelFor(model => model.shipName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.shipName, new { htmlAttributes = new { @class = "form-control", @style = "width: 300px" } })
                    @Html.ValidationMessageFor(model => model.shipName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
                @* @Html.LabelFor(model => model.shipMobile, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.shipMobile, new { htmlAttributes = new { @class = "form-control", @style = "width: 300px" } })
                    @Html.ValidationMessageFor(model => model.shipMobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Địa chỉ khách hàng", htmlAttributes: new { @class = "control-label col-md-2" })
                @*@Html.LabelFor(model => model.shipAddress, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.shipAddress, new { htmlAttributes = new { @class = "form-control", @style = "width: 300px" } })
                    @Html.ValidationMessageFor(model => model.shipAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Địa chỉ Email", htmlAttributes: new { @class = "control-label col-md-2" })
                @*@Html.LabelFor(model => model.shipEmail, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.shipEmail, new { htmlAttributes = new { @class = "form-control", @style = "width: 300px" } })
                    @Html.ValidationMessageFor(model => model.shipEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Lưu thay đổi" class="btn btn-default" onclick="return confirm('Xác nhận thay đổi?')" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Quay lại", "CustomerManager", "HomeAd", null, new { onclick = "return confirm('Bạn chưa lưu thay đổi! Tiếp tục quay lại?')" })
    </div>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</div>

    
